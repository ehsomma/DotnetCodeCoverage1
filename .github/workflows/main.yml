name: Build ðŸ§±

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  #workflow_dispatch:

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          
      - name: Restore dependencies
        run: dotnet restore ./DotnetCodeCoverage1.sln
        
      - name: Build
        run: dotnet build ./DotnetCodeCoverage1.sln --verbosity minimal --configuration Release --no-restore -p:TreatWarningsAsErrors=true
        
      - name: Run tests
        #run: dotnet test ./DotnetCodeCoverage1.sln --configuration Release --verbosity normal --no-restore --no-build --collect:"Code Coverage" --logger trx --results-directory Coverage --settings:ms.runsettings.xml
        # Ojo, no funciona con collect:"Code Coverage", solo con collect:"XPlat Code Coverage", y XPlat tenia el lio que no me excluia los assemblies!
        run: dotnet test ./DotnetCodeCoverage1.sln --configuration Release --verbosity normal --no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory ./coverage --settings:ms.runsettings.xml

      - name: ReportGenerator
        run: |
            dotnet tool install -g dotnet-reportgenerator-globaltool
            reportgenerator -reports:"coverage/**/coverage.cobertura.xml" -reporttypes:"MarkdownSummaryGithub;Cobertura" -targetDir:"CodeCoverageReport"

      # - name: Upload coverage report artifact
      #   uses: actions/upload-artifact@v1.0.0
      #   with:
      #     name: CoverageReport # Artifact name        
      #     path: ./TestProject1/TestResults/CoverageReport # Directory containing files to upload

      - name: Coveralls
        uses: coverallsapp/github-action@v2 #uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          format: cobertura
          file: "coverage/**/coverage.cobertura.xml"

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0 #https://github.com/marketplace/actions/code-coverage-summary
        with:
          filename: "coverage/**/coverage.cobertura.xml"
          badge: true
          format: "markdown"
          output: "both"
          indicators: true
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

  build-reportgenerator:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    # Add coverlet.collector nuget package to test project - 'dotnet add <TestProject.cspoj> package coverlet
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage

    - name: Create code coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage/**/coverage.cobertura.xml -targetdir:CodeCoverage -reporttypes:'MarkdownSummaryGithub;Cobertura'

    - name: Write to Job Summary
      run: cat CodeCoverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY